type Metadata {
  name: String!
  namespace: String!
  uid: ID!
  annotations: StringMap
}

type RevisionSpec {
  containers: [Container!]!
  serviceAccountName: String
  containerConcurrency: Int
  timeoutSeconds: Int
}

type RouteSpec {
  traffic: [TrafficTarget!]!
}

type TrafficTarget {
  tag: String
  percent: Int
  revisionName: String
  configurationName: String
  latestRevision: Boolean
}

type RevisionTemplateSpec {
  metadata: Metadata
  spec: RevisionSpec
}

type ServiceSpec {
  template: RevisionTemplateSpec
  traffic: [TrafficTarget!]
}

type ServiceStatus {
  traffic: [TrafficTarget!]
}

type Service {
  id: ID!
  metadata: Metadata!
  spec: ServiceSpec
  status: ServiceStatus
}

type Container {
  name: String
  args: [String!]
  command: [String!]
  image: String!
}

type Query {
  services(namespace: String! = "default"): [Service!]!
  serviceByName(namespace: String! = "default", name: String!): Service
}

scalar StringMap
